package xocdia;

import java.awt.EventQueue;
import java.util.Random;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.ImageIcon;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.JButton;
import java.awt.Font;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import javax.swing.JTextField;

public class xoc extends JFrame {

	private static final long serialVersionUID = 1L;
	private JPanel contentPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					xoc frame = new xoc();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	int sum1=0,total1=0;
	int sum2=0,total2=0;
	int sum3=0,total3=0;
	int sum4=0,total4=0;
	int time1=0,time2=0,time3=0,time4=0;
	int sodu=1000000;
	private JTextField BalanceText;
	public xoc() {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 780, 704);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		BalanceText = new JTextField();
		BalanceText.setColumns(10);
		BalanceText.setText(Integer.toString(sodu));
		JLabel lblNewLabel = new JLabel("");
		lblNewLabel.setIcon(new ImageIcon(xoc.class.getResource("/xocdia/779460df-ade7-4c00-9576-9843c5e50711.jpg")));
		
		JLabel lblNewLabel_1 = new JLabel("");
		lblNewLabel_1.setIcon(new ImageIcon(xoc.class.getResource("/xocdia/36a9d28c-8b36-4dc1-9e8e-98cb73e34246.jpg")));
		
		JLabel lblNewLabel_2 = new JLabel("");
		lblNewLabel_2.setIcon(new ImageIcon(xoc.class.getResource("/xocdia/4f96f5d3-daff-4a34-88d8-e390a92a1efb.jpg")));
		
		JLabel lblNewLabel_3 = new JLabel("");
		lblNewLabel_3.setIcon(new ImageIcon(xoc.class.getResource("/xocdia/8ddbf6bd-5dab-41f7-927b-d7f56068f910.jpg")));
		
		JButton btnBau = new JButton("Bầu");
		
		JLabel bau = new JLabel("Bầu:");
		bau.setFont(new Font("Times New Roman", Font.PLAIN, 20));
		btnBau.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				sum1=sum1+1;
				sodu-=200000;
				total1+=200000;
				BalanceText.setText(Integer.toString(sodu));
				bau.setText("Bầu: "+sum1);
			}
		});
		btnBau.setFont(new Font("Times New Roman", Font.PLAIN, 15));
		
		JButton btnTom = new JButton("Tôm");
		JLabel tom = new JLabel("Tôm:");
		tom.setFont(new Font("Times New Roman", Font.PLAIN, 20));
		btnTom.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				sum2+=1;
				sodu-=200000;
				total2+=200000;
				BalanceText.setText(Integer.toString(sodu));
				tom.setText("Tôm: "+sum2);
			}
		});
		btnTom.setFont(new Font("Times New Roman", Font.PLAIN, 15));
		
		JButton btnCua = new JButton("Cua");
		JLabel cua = new JLabel("Cua:");
		cua.setFont(new Font("Times New Roman", Font.PLAIN, 20));
		btnCua.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				sum3+=1;
				sodu-=200000;
				total3+=200000;
				BalanceText.setText(Integer.toString(sodu));
				cua.setText("Cua: "+sum3);
			}
		});
		
		btnCua.setFont(new Font("Times New Roman", Font.PLAIN, 15));
		
		JButton btnCa = new JButton("Cá");
		JLabel ca = new JLabel("Cá:");
		ca.setFont(new Font("Times New Roman", Font.PLAIN, 20));
		btnCa.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				sum4+=1;
				sodu-=200000;
				total4+=200000;
				BalanceText.setText(Integer.toString(sodu));
				ca.setText("Ca: "+sum4);
			}
		});
		btnCa.setFont(new Font("Times New Roman", Font.PLAIN, 15));
		
		JLabel balance = new JLabel("Số dư:");
		balance.setFont(new Font("Times New Roman", Font.PLAIN, 15));
		
		JButton btnRoll = new JButton("Roll");
		btnRoll.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				String[] items = {"Bầu", "Tôm", "Cua", "Cá"};
		        String result1 = items[new Random().nextInt(items.length)];
		        String result2 = items[new Random().nextInt(items.length)];
		        String result3 = items[new Random().nextInt(items.length)];
		        
		        JOptionPane.showMessageDialog(null, "Result: " + result1+" - "+result2+" - "+result3);
		        if(result1.equals("Bầu")) {
		        	time1+=1;
		        }
		        else if(result1.equals("Tôm")) {
		        	time2+=1;
		        }
		        else if(result1.equals("Cua")) {
		        	time3+=1;
		        }
		        else {
		        	time4+=1;
		        }
		        
		        if(result2.equals("Bầu")) {
		        	time1+=1;
		        }
		        else if(result2.equals("Tôm")) {
		        	time2+=1;
		        }
		        else if(result2.equals("Cua")) {
		        	time3+=1;
		        }
		        else {
		        	time4+=1;
		        }
		        
		        if(result3.equals("Bầu")) {
		        	time1+=1;
		        }
		        else if(result3.equals("Tôm")) {
		        	time2+=1;
		        }
		        else if(result3.equals("Cua")) {
		        	time3+=1;
		        }
		        else {
		        	time4+=1;
		        }
		        if(sum1!=0 && time1!=0) {
		        	if(time1==1) {
		        		sodu+=(total1*2);
		        		BalanceText.setText(Integer.toString(sodu));
		        	}
		        	else if(time1==2) {
		        		sodu+=(total1*3);
		        		BalanceText.setText(Integer.toString(sodu));
		        	}
		        	else {
		        		sodu+=(total1*4);
		        		BalanceText.setText(Integer.toString(sodu));
		        	}
		        }
		        if(sum2!=0 && time2!=0) {
		        	if(time1==1) {
		        		sodu+=(total2*2);
		        		BalanceText.setText(Integer.toString(sodu));
		        	}
		        	else if(time1==2) {
		        		sodu+=(total2*3);
		        		BalanceText.setText(Integer.toString(sodu));
		        	}
		        	else {
		        		sodu+=(total2*4);
		        		BalanceText.setText(Integer.toString(sodu));
		        	}
		        }
		        if(sum3!=0 && time3!=0) {
		        	if(time3==1) {
		        		sodu+=(total3*2);
		        		BalanceText.setText(Integer.toString(sodu));
		        	}
		        	else if(time3==2) {
		        		sodu+=(total3*3);
		        		BalanceText.setText(Integer.toString(sodu));
		        	}
		        	else {
		        		sodu+=(total3*4);
		        		BalanceText.setText(Integer.toString(sodu));
		        	}
		        }
		        
			}
		});
		btnRoll.setFont(new Font("Times New Roman", Font.PLAIN, 20));
		
		GroupLayout gl_contentPane = new GroupLayout(contentPane);
		gl_contentPane.setHorizontalGroup(
			gl_contentPane.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_contentPane.createSequentialGroup()
					.addGap(182)
					.addComponent(btnCua, GroupLayout.PREFERRED_SIZE, 96, GroupLayout.PREFERRED_SIZE)
					.addPreferredGap(ComponentPlacement.RELATED, 175, Short.MAX_VALUE)
					.addComponent(btnCa, GroupLayout.PREFERRED_SIZE, 96, GroupLayout.PREFERRED_SIZE)
					.addGap(207))
				.addGroup(gl_contentPane.createSequentialGroup()
					.addGroup(gl_contentPane.createParallelGroup(Alignment.LEADING)
						.addGroup(gl_contentPane.createSequentialGroup()
							.addGap(167)
							.addComponent(btnBau, GroupLayout.PREFERRED_SIZE, 96, GroupLayout.PREFERRED_SIZE))
						.addGroup(gl_contentPane.createSequentialGroup()
							.addGap(131)
							.addGroup(gl_contentPane.createParallelGroup(Alignment.LEADING)
								.addComponent(lblNewLabel_2, GroupLayout.PREFERRED_SIZE, 188, GroupLayout.PREFERRED_SIZE)
								.addComponent(lblNewLabel))))
					.addGroup(gl_contentPane.createParallelGroup(Alignment.LEADING)
						.addGroup(gl_contentPane.createSequentialGroup()
							.addPreferredGap(ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
							.addGroup(gl_contentPane.createParallelGroup(Alignment.LEADING)
								.addComponent(lblNewLabel_1, GroupLayout.PREFERRED_SIZE, 205, GroupLayout.PREFERRED_SIZE)
								.addComponent(lblNewLabel_3))
							.addGap(143))
						.addGroup(gl_contentPane.createSequentialGroup()
							.addGap(131)
							.addComponent(btnTom, GroupLayout.PREFERRED_SIZE, 96, GroupLayout.PREFERRED_SIZE)
							.addContainerGap())))
				.addGroup(gl_contentPane.createSequentialGroup()
					.addContainerGap()
					.addGroup(gl_contentPane.createParallelGroup(Alignment.LEADING)
						.addGroup(gl_contentPane.createSequentialGroup()
							.addComponent(cua, GroupLayout.PREFERRED_SIZE, 96, GroupLayout.PREFERRED_SIZE)
							.addPreferredGap(ComponentPlacement.RELATED, 197, Short.MAX_VALUE)
							.addComponent(btnRoll, GroupLayout.PREFERRED_SIZE, 149, GroupLayout.PREFERRED_SIZE)
							.addGap(161))
						.addGroup(gl_contentPane.createSequentialGroup()
							.addComponent(ca, GroupLayout.PREFERRED_SIZE, 96, GroupLayout.PREFERRED_SIZE)
							.addPreferredGap(ComponentPlacement.RELATED)))
					.addPreferredGap(ComponentPlacement.RELATED)
					.addComponent(balance)
					.addPreferredGap(ComponentPlacement.RELATED)
					.addComponent(BalanceText, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
					.addGap(3))
				.addGroup(gl_contentPane.createSequentialGroup()
					.addContainerGap()
					.addComponent(bau, GroupLayout.PREFERRED_SIZE, 96, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(650, Short.MAX_VALUE))
				.addGroup(gl_contentPane.createSequentialGroup()
					.addContainerGap()
					.addComponent(tom, GroupLayout.PREFERRED_SIZE, 96, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(650, Short.MAX_VALUE))
		);
		gl_contentPane.setVerticalGroup(
			gl_contentPane.createParallelGroup(Alignment.LEADING)
				.addGroup(gl_contentPane.createSequentialGroup()
					.addGroup(gl_contentPane.createParallelGroup(Alignment.LEADING)
						.addGroup(gl_contentPane.createSequentialGroup()
							.addGap(61)
							.addComponent(lblNewLabel, GroupLayout.PREFERRED_SIZE, 172, GroupLayout.PREFERRED_SIZE)
							.addGap(18)
							.addComponent(btnBau))
						.addGroup(gl_contentPane.createSequentialGroup()
							.addGap(45)
							.addComponent(lblNewLabel_1, GroupLayout.PREFERRED_SIZE, 203, GroupLayout.PREFERRED_SIZE)
							.addPreferredGap(ComponentPlacement.RELATED)
							.addComponent(btnTom)))
					.addPreferredGap(ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
					.addGroup(gl_contentPane.createParallelGroup(Alignment.TRAILING)
						.addComponent(lblNewLabel_2)
						.addComponent(lblNewLabel_3))
					.addGap(29)
					.addGroup(gl_contentPane.createParallelGroup(Alignment.BASELINE)
						.addComponent(btnCua, GroupLayout.PREFERRED_SIZE, 27, GroupLayout.PREFERRED_SIZE)
						.addComponent(btnCa, GroupLayout.PREFERRED_SIZE, 27, GroupLayout.PREFERRED_SIZE))
					.addGap(4)
					.addComponent(bau)
					.addGroup(gl_contentPane.createParallelGroup(Alignment.LEADING)
						.addGroup(gl_contentPane.createSequentialGroup()
							.addPreferredGap(ComponentPlacement.RELATED)
							.addComponent(tom, GroupLayout.PREFERRED_SIZE, 24, GroupLayout.PREFERRED_SIZE)
							.addPreferredGap(ComponentPlacement.RELATED)
							.addComponent(cua, GroupLayout.PREFERRED_SIZE, 24, GroupLayout.PREFERRED_SIZE)
							.addPreferredGap(ComponentPlacement.RELATED)
							.addComponent(ca, GroupLayout.PREFERRED_SIZE, 24, GroupLayout.PREFERRED_SIZE))
						.addGroup(gl_contentPane.createSequentialGroup()
							.addGap(30)
							.addGroup(gl_contentPane.createParallelGroup(Alignment.LEADING)
								.addGroup(gl_contentPane.createParallelGroup(Alignment.BASELINE)
									.addComponent(balance, GroupLayout.PREFERRED_SIZE, 37, GroupLayout.PREFERRED_SIZE)
									.addComponent(BalanceText, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
								.addComponent(btnRoll))))
					.addContainerGap())
		);
		contentPane.setLayout(gl_contentPane);
	}
}
