
public class LinkedList {
	private Node pHead;
	private Node pTail;
	private int spt;
	// Cấu tử khởi tạo
	public LinkedList() {
		this.spt=0;
		this.pHead=null;
		this.pTail=null;
	}
	// Kiểm tra danh sách rỗng
	public boolean EmptyList() {
	    return this.spt == 0;
	}
	// Chèn đầu danh sách
	public void Insert_Head(String namesv, int masv, int diem) {
		Node newNode=new Node(namesv, masv, diem);
		if(this.EmptyList()) {
			this.pHead=newNode;
			this.pTail=newNode;
		}
		else {
			newNode.link=this.pHead;
			this.pHead=newNode;
		}
		this.spt++;
	}
	// Chèn cuối danh sách
	public void Insert_Tail(String namesv, int masv, int diem) {
		Node newNode=new Node(namesv, masv, diem);
		if(this.EmptyList()) {
			this.pHead=newNode;
			this.pTail=newNode;
		}
		else {
			this.pTail.link=newNode;
			this.pTail=newNode;
		}
		this.spt++;
	}
	// Chèn sau một mã sinh viên key
	public void Insert_After(int key,String namesv, int masv, int diem) {
		Node newNode=new Node(namesv, masv, diem);
		Node current= this.pHead;
		while(current!=null && current.infor.ma!=key) {
			current=current.link;
		}
		if(current==null){
			return;
		}
		else {
			newNode.link=current.link;
			current.link=newNode;
			if(current==this.pTail) {
				this.pTail=newNode;
			}
			this.spt++;
		}
	}
	// Xóa phần tử đầu của danh sách
	
	// Duyệt danh sách
	public void processList() {
		System.out.println("Thong tin sinh vien: ");
		Node current= this.pHead;
		while(current!=null) {
			current.printData();
			current=current.link;
		}
	}
}
